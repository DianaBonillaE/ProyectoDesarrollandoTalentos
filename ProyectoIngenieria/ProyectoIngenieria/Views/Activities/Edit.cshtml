@model ProyectoIngenieria.DB.Activity


@Html.Partial("~/Views/Home/AdminMenu.cshtml")

@using (Html.BeginForm("Edit", "Activities", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.photo_id)
    <div class="container md-3">
        <br />
        <h1 class="text-center">Actualizar actividad</h1>
        <br />

        <div class="panel-body">
            @if (ViewBag.message != null)
            {
                <div class="alert alert-danger text-center alert-dismissible">
                    <h4 class="alert-heading"><i class="icon fa fa-times"></i> ¡Error!</h4>
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">x</button>
                    <h6>@ViewBag.message</h6>
                </div>
            }
                    <br />
            <div class="row">
                <div class="col-md-1"></div>
                <div class="col-md-5">
                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.start_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.start_date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.start_date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.end_date, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.end_date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.end_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <a>Foto Actual</a>
                        <div class="col-md-10">
                            <img src="@(ViewBag.image)" width="50%;" height="100%;" />
                        </div>
                    </div>

                </div>
                <div class="col-md-5">
                    <div class="form-group">

                        <div class="col-md-10">
                            <a>Seleccione una nueva foto</a>
                            <br />
                            <input type="file" name="File" id="File" />
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            <a>Nombre de la imagen</a>
                            <br />
                            <input type="text" name="nameFile" id="nameFile" value="@(ViewBag.name)" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            <a>Patrocinadores</a>
                            <select multiple="multiple" style="width:100%;" id="sponsors" name="sponsors" class="form-control">
                                @foreach (var item in ViewBag.sponsors)
                                {
                                    var sel = (Model.Sponsor.Where(ca => ca.identification == item.identification).Count() > 0) ? "selected" : "";

                                    <option value="@item.identification" @sel>@item.name</option>

                                }
                                <option value="0">Ninguno</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            <a>Usuarios</a>
                            <select multiple="multiple" style="width:100%;" id="users" name="users" class="form-control">
                                @foreach (var item in ViewBag.users)
                                {
                                    var sel = (Model.User.Where(ca => ca.identification == item.identification).Count() > 0) ? "selected" : "";

                                    <option value="@item.identification" @sel>@item.name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            <a>Voluntarios</a>

                            <select multiple="multiple" style="width:100%;" id="voluntaries" name="voluntaries" class="form-control">
                                @foreach (var item in ViewBag.voluntaries)
                                {

                                    var sel = (Model.Voluntary.Where(ca => ca.identification == item.identification).Count() > 0) ? "selected" : "";

                                    <option value="@item.identification" @sel>@item.name</option>
                                }
                                <option value="0">Ninguno</option>

                            </select>

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <a href="~/Activities/Index" class="btn btn-primary btn-md text-uppercase">Cancelar</a>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <input type="submit" value="Guardar Cambios" class="btn btn-primary btn-md text-uppercase" />
                    </div>
                </div>
            </div>
        </div>
        <br />
    </div>

}
<hr />

<style>

    #mainNav {
        background-color: rgb(46,49,146);
    }

    .md-3 {
        box-shadow: 5px 0px 40px rgba(0,0,0, .2);
        width: 97%;
        margin-top: 8%;
    }

    .panel {
        border-radius: 0 !important;
        transition: box-shadow 0.5s;
        width: 55%;
    }

    .form-group {
        align-content: center;
    }
</style>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
